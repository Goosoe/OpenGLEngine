replace assimp with https://github.com/tinyobjloader/tinyobjloader

# Terrain
- Create a terrain demo using a plane mesh and optimization
    - [x] Make function for generating a mesh with arbitrary size
    - [x] Make mesh change height with noise
    - [x] Calculate normals for vertices to have better shading
    - [x] Replace Vertex and Mesh created in Terrain Model. Just refactor it pls
    - [x] Average normals with data from adjacent vertices, right now it's just replacing old normal with the most recently calculated one
    - [] Add texture + calculate texture coords
    - [] Make it bigger + Optimize it 

# General
- Add level switch on main.cpp
- Add functions to dispose of shaders and other stored data on level switches 
- Update entity normals when rotating it. This comes in question: does each entity store its own normals list? or do we calculate 

- Model must have the original normals or place in memory where the shader fetches it and a list of processed normals for each entity rotation value?
